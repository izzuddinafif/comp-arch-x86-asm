EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
fsaaacvz.bin -- emu8086 assembler version: 4.08  
 
[ 10-Oct-21  --  11:13:12 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       #make_bin#
[   2]        :                                       
[   3]        :                                       ; BIN is plain binary format similar to .com format, but not limited to 1 segment;
[   4]        :                                       ; All values between # are directives, these values are saved into a separate .binf file.
[   5]        :                                       ; Before loading .bin file emulator reads .binf file with the same file name.
[   6]        :                                       
[   7]        :                                       ; All directives are optional, if you don't need them, delete them.
[   8]        :                                       
[   9]        :                                       ; set loading address, .bin file will be loaded to this address:
[  10]        :                                       #LOAD_SEGMENT=0500h#
[  11]        :                                       #LOAD_OFFSET=0000h#
[  12]        :                                       
[  13]        :                                       ; set entry point:
[  14]        :                                       #CS=0500h#	; same as loading segment
[  15]        :                                       #IP=0000h#	; same as loading offset
[  16]        :                                       
[  17]        :                                       ; set segment registers
[  18]        :                                       #DS=0500h#	; same as loading segment
[  19]        :                                       #ES=0500h#	; same as loading segment
[  20]        :                                       
[  21]        :                                       ; set stack
[  22]        :                                       #SS=0500h#	; same as loading segment
[  23]        :                                       #SP=FFFEh#	; set to top of loading segment
[  24]        :                                       
[  25]        :                                       ; set general registers (optional)
[  26]        :                                       #AX=0000h#
[  27]        :                                       #BX=0000h#
[  28]        :                                       #CX=0000h#
[  29]        :                                       #DX=0000h#
[  30]        :                                       #SI=0000h#
[  31]        :                                       #DI=0000h#
[  32]        :                                       #BP=0000h#
[  33]        :                                       
[  34]        :                                       ; add your code here
[  35]        :                                       ORG 1000H
[  36]    0000: ??                                    MOV AL, 10000000B       ;Activate Signal
[  37]    0002: ??                                    OUT 06H, AL             ;Writing Activate signal to  Control Register
[  38]    0004: ??                                    MOV AL, 11111111B       ;Off Signal
[  39]    0006: ??                                    OUT 00H, AL             ;Writing off signal to Port A
[  40]    0008: ??                                    L1: MOV SI, OFFSET FONT ;Assigning source address to Memory address/                            ;offset of FONT Variable
[  41]    000B: ??                                    MOV AH, 00000001B
[  42]    000D: ??                                    L2: MOV AL, BYTE PTR CS:[SI]
[  43]    0010: ??                                    OUT 1AH, AL
[  44]    0012: ??                                    MOV AL, AH
[  45]    0014: ??                                    OUT 1CH, AL
[  46]    0016: ??                                    CALL TIMER
[  47]    0019: ??                                    INC SI
[  48]    001A: ??                                    CLC
[  49]    001B: ??                                    ROL AH, 1
[  50]    001D: ??                                    JNC L2
[  51]    001F: ??                                    JMP L1
[  52]    0021: ??                                    INT 3
[  53]    0022: ??                                    TIMER: MOV CX, 300
[  54]    0025: ??                                    TIMER1: NOP
[  55]    0026: ??                                    NOP
[  56]    0027: ??                                    NOP
[  57]    0028: ??                                    NOP
[  58]    0029: ??                                    LOOP TIMER1
[  59]    002B: ??                                    RET
[  60]    002C: ??                                    FONT: DB 11111111B
[  61]    002D: ??                                    DB 11001001B
[  62]    002E: ??                                    DB 10110100B
[  63]    002F: ??                                    DB 10110110B
[  64]    0030: ??                                    DB 10110110B
[  65]    0031: ??                                    DB 10110110B
[  66]    0032: ??                                    DB 10000000B
[  67]    0033: ??                                    DB 11111111B
[  68]        :                                       
[  69]    0034: ??                                    HLT           ; halt!
[  70]        :                                       
[  71]        :                                       
[  72]        :                                       
[  73]        :                                       
 
===================================================================================================
 




===================================================================================================
