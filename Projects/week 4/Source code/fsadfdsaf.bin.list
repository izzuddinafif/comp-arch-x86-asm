EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
fsadfdsaf.bin -- emu8086 assembler version: 4.08  
 
[ 19-Sep-21  --  05:11:38 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       #make_bin#
[   2]        :                                       
[   3]        :                                       ; BIN is plain binary format similar to .com format, but not limited to 1 segment;
[   4]        :                                       ; All values between # are directives, these values are saved into a separate .binf file.
[   5]        :                                       ; Before loading .bin file emulator reads .binf file with the same file name.
[   6]        :                                       
[   7]        :                                       ; All directives are optional, if you don't need them, delete them.
[   8]        :                                       
[   9]        :                                       ; set loading address, .bin file will be loaded to this address:
[  10]        :                                       #LOAD_SEGMENT=0500h#
[  11]        :                                       #LOAD_OFFSET=0000h#
[  12]        :                                       
[  13]        :                                       ; set entry point:
[  14]        :                                       #CS=0500h#    ; same as loading segment
[  15]        :                                       #IP=0000h#    ; same as loading offset
[  16]        :                                       
[  17]        :                                       ; set segment registers
[  18]        :                                       #DS=0500h#    ; same as loading segment
[  19]        :                                       #ES=0500h#    ; same as loading segment
[  20]        :                                       
[  21]        :                                       ; set stack
[  22]        :                                       #SS=0500h#    ; same as loading segment
[  23]        :                                       #SP=FFFEh#    ; set to top of loading segment
[  24]        :                                       
[  25]        :                                       ; set general registers (optional)
[  26]        :                                       #AX=0000h#
[  27]        :                                       #BX=0000h#
[  28]        :                                       #CX=0000h#
[  29]        :                                       #DX=0000h#
[  30]        :                                       #SI=0000h#
[  31]        :                                       #DI=0000h#
[  32]        :                                       #BP=0000h#
[  33]        :                                       
[  34]        :                                       ; add your code here
[  35]        :                                       DATA SEGMENT
[  36]        :                                       PORTA EQU 00H
[  37]        :                                       PORTB EQU 02H
[  38]        :                                       PORTC EQU 04H
[  39]        :                                       PORT_CON EQU 06H
[  40]        :                                       DATA ENDS
[  41]        :                                       
[  42]        :                                       CODE SEGMENT
[  43]    0005: BA 06 00                              MOV AX,DATA
[  44]    0008: B0 82                                 MOV DS,AX
[  45]        :                                       
[  46]        :                                       org 0000h
[  47]        :                                       
[  48]        :                                       
[  49]        :                                       ;add your code here
[  50]    0005:                                       START:
[  51]        :                                       
[  52]    0005: BA 06 00                              MOV DX, PORT_CON
[  53]    0008: B0 82                                 MOV AL, 10000010B; PORT A as Output, PORT B as Input
[  54]    000A: EE                                    OUT DX, AL
[  55]        :                                       
[  56]    000B: EB 00                                 JMP X1
[  57]        :                                       
[  58]    000D:                                       X1:
[  59]    000D: E4 02                                 IN AL, PORTB
[  60]    000F: 24 FF                                 AND AL, 00FFH
[  61]    0011: 3C FF                                 CMP AL, 00FFH
[  62]    0013: 75 02                                 JNZ XON
[  63]    0015: 74 0B                                 JZ XOFF
[  64]        :                                       
[  65]    0017:                                       XON:
[  66]    0017: E8 13 00                              CALL delay_20ms ;debounce
[  67]    001A: B0 FF                                 MOV AL, 00FFH
[  68]    001C: BA 00 00                              MOV DX, PORTA
[  69]    001F: EE                                    OUT DX, AL
[  70]    0020: EB EB                                 JMP X1
[  71]        :                                       
[  72]    0022:                                       XOFF:
[  73]    0022: E8 08 00                              CALL delay_20ms ;debounce
[  74]    0025: B0 FF                                 MOV AL, 00FFH
[  75]    0027: BA 00 00                              MOV DX, PORTA
[  76]    002A: EE                                    OUT DX, AL
[  77]    002B: EB E0                                 JMP X1
[  78]        :                                       
[  79]        :                                       ;Delay of 20ms
[  80]    002D:                                       delay_20ms PROC near
[  81]    002D: B9 FF 00                              MOV     CX, 00FFH
[  82]    0030: E2 FE                                 x9: LOOP    x9
[  83]    0032: C3                                    RET
[  84]        :                                       delay_20ms  ENDP
[  85]        :                                       
[  86]        :                                       CODE ENDS
[  87]        :                                       END
[  88]        :                                       
[  89]        :                                       HLT           ; halt!
[  90]        :                                       
[  91]        :                                       
[  92]        :                                       
[  93]        :                                       
[  94]        :                                       
[  95]        :                                       
[  96]        :                                       ; [SOURCE]: C:\Users\Lenovo\Documents\Percobaan2.asm
[  97]        :                                       
[  98]        :                                       
[  99]        :                                       
[ 100]        :                                       
[ 101]        :                                       ; [SOURCE]: C:\emu8086\MySource\test1.bin.asm
[ 102]        :                                       
[ 103]        :                                       
 
===================================================================================================
 




===================================================================================================
